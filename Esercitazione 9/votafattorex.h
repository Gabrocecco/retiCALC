/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _VOTAFATTOREX_H_RPCGEN
#define _VOTAFATTOREX_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif


typedef char *String;
#define NUMGIUDICI 10000

struct voto {
	char operazione;
	String candidato;
};
typedef struct voto voto;

struct classifica {
	String giudice[NUMGIUDICI];
	int punti[NUMGIUDICI];
};
typedef struct classifica classifica;

#define VOTAFATTOREX 0x20000000
#define VOTOVERS 1

#if defined(__STDC__) || defined(__cplusplus)
#define AGGINGI_VOTO 1
extern  bool_t * aggingi_voto_1(voto *, CLIENT *);
extern  bool_t * aggingi_voto_1_svc(voto *, struct svc_req *);
#define CLASSIFICA_VOTO 2
extern  classifica * classifica_voto_1(void *, CLIENT *);
extern  classifica * classifica_voto_1_svc(void *, struct svc_req *);
extern int votafattorex_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define AGGINGI_VOTO 1
extern  bool_t * aggingi_voto_1();
extern  bool_t * aggingi_voto_1_svc();
#define CLASSIFICA_VOTO 2
extern  classifica * classifica_voto_1();
extern  classifica * classifica_voto_1_svc();
extern int votafattorex_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_String (XDR *, String*);
extern  bool_t xdr_voto (XDR *, voto*);
extern  bool_t xdr_classifica (XDR *, classifica*);

#else /* K&R C */
extern bool_t xdr_String ();
extern bool_t xdr_voto ();
extern bool_t xdr_classifica ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_VOTAFATTOREX_H_RPCGEN */
